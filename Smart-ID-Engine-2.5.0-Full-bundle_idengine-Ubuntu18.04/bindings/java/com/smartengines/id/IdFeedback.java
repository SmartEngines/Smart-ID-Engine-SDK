/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (https://www.swig.org).
 * Version 4.1.1
 *
 * Do not make changes to this file unless you know what you are doing - modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.smartengines.id;

import com.smartengines.common.*;

public class IdFeedback {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  public IdFeedback(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  public static long getCPtr(IdFeedback obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  public static long swigRelease(IdFeedback obj) {
    long ptr = 0;
    if (obj != null) {
      if (!obj.swigCMemOwn)
        throw new RuntimeException("Cannot release ownership as memory is not owned");
      ptr = obj.swigCPtr;
      obj.swigCMemOwn = false;
      obj.delete();
    }
    return ptr;
  }

  @SuppressWarnings("deprecation")
  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        jniidengineJNI.delete_IdFeedback(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  protected void swigDirectorDisconnect() {
    swigCMemOwn = false;
    delete();
  }

  public void swigReleaseOwnership() {
    swigCMemOwn = false;
    jniidengineJNI.IdFeedback_change_ownership(this, swigCPtr, false);
  }

  public void swigTakeOwnership() {
    swigCMemOwn = true;
    jniidengineJNI.IdFeedback_change_ownership(this, swigCPtr, true);
  }

  public void FeedbackReceived(IdFeedbackContainer feedback_container) {
    jniidengineJNI.IdFeedback_FeedbackReceived(swigCPtr, this, IdFeedbackContainer.getCPtr(feedback_container), feedback_container);
  }

  public void TemplateDetectionResultReceived(IdTemplateDetectionResult detection_result) {
    jniidengineJNI.IdFeedback_TemplateDetectionResultReceived(swigCPtr, this, IdTemplateDetectionResult.getCPtr(detection_result), detection_result);
  }

  public void TemplateSegmentationResultReceived(IdTemplateSegmentationResult segmentation_result) {
    jniidengineJNI.IdFeedback_TemplateSegmentationResultReceived(swigCPtr, this, IdTemplateSegmentationResult.getCPtr(segmentation_result), segmentation_result);
  }

  public void ResultReceived(IdResult result_received) {
    jniidengineJNI.IdFeedback_ResultReceived(swigCPtr, this, IdResult.getCPtr(result_received), result_received);
  }

  public void SessionEnded() {
    jniidengineJNI.IdFeedback_SessionEnded(swigCPtr, this);
  }

  public IdFeedback() {
    this(jniidengineJNI.new_IdFeedback(), true);
    jniidengineJNI.IdFeedback_director_connect(this, swigCPtr, true, true);
  }

}
