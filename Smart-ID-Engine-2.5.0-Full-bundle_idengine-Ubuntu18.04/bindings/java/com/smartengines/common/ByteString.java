/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (https://www.swig.org).
 * Version 4.1.1
 *
 * Do not make changes to this file unless you know what you are doing - modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.smartengines.common;

public class ByteString {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  public ByteString(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  public static long getCPtr(ByteString obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  public static long swigRelease(ByteString obj) {
    long ptr = 0;
    if (obj != null) {
      if (!obj.swigCMemOwn)
        throw new RuntimeException("Cannot release ownership as memory is not owned");
      ptr = obj.swigCPtr;
      obj.swigCMemOwn = false;
      obj.delete();
    }
    return ptr;
  }

  @SuppressWarnings("deprecation")
  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        jnisecommonJNI.delete_ByteString(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public ByteString() {
    this(jnisecommonJNI.new_ByteString__SWIG_0(), true);
  }

  public ByteString(byte[] bytes) {
    this(jnisecommonJNI.new_ByteString__SWIG_1(bytes), true);
  }

  public ByteString(ByteString other) {
    this(jnisecommonJNI.new_ByteString__SWIG_2(ByteString.getCPtr(other), other), true);
  }

  public void swap(ByteString other) {
    jnisecommonJNI.ByteString_swap(swigCPtr, this, ByteString.getCPtr(other), other);
  }

  public int GetLength() {
    return jnisecommonJNI.ByteString_GetLength(swigCPtr, this);
  }

  public int GetRequiredBase64BufferLength() {
    return jnisecommonJNI.ByteString_GetRequiredBase64BufferLength(swigCPtr, this);
  }

  public int CopyBase64ToBuffer(String out_buffer, int buffer_length) {
    return jnisecommonJNI.ByteString_CopyBase64ToBuffer(swigCPtr, this, out_buffer, buffer_length);
  }

  public MutableString GetBase64String() {
    return new MutableString(jnisecommonJNI.ByteString_GetBase64String(swigCPtr, this), true);
  }

  public int GetRequiredHexBufferLength() {
    return jnisecommonJNI.ByteString_GetRequiredHexBufferLength(swigCPtr, this);
  }

  public int CopyHexToBuffer(String out_buffer, int buffer_length) {
    return jnisecommonJNI.ByteString_CopyHexToBuffer(swigCPtr, this, out_buffer, buffer_length);
  }

  public MutableString GetHexString() {
    return new MutableString(jnisecommonJNI.ByteString_GetHexString(swigCPtr, this), true);
  }

}
