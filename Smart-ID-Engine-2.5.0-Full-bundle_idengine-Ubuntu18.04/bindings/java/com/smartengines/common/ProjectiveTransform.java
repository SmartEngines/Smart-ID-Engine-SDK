/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (https://www.swig.org).
 * Version 4.1.1
 *
 * Do not make changes to this file unless you know what you are doing - modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.smartengines.common;

public class ProjectiveTransform {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  public ProjectiveTransform(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  public static long getCPtr(ProjectiveTransform obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  public static long swigRelease(ProjectiveTransform obj) {
    long ptr = 0;
    if (obj != null) {
      if (!obj.swigCMemOwn)
        throw new RuntimeException("Cannot release ownership as memory is not owned");
      ptr = obj.swigCPtr;
      obj.swigCMemOwn = false;
      obj.delete();
    }
    return ptr;
  }

  @SuppressWarnings("deprecation")
  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        jnisecommonJNI.delete_ProjectiveTransform(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public static boolean CanCreate(Quadrangle src_quad, Quadrangle dst_quad) {
    return jnisecommonJNI.ProjectiveTransform_CanCreate__SWIG_0(Quadrangle.getCPtr(src_quad), src_quad, Quadrangle.getCPtr(dst_quad), dst_quad);
  }

  public static boolean CanCreate(Quadrangle src_quad, Size dst_size) {
    return jnisecommonJNI.ProjectiveTransform_CanCreate__SWIG_1(Quadrangle.getCPtr(src_quad), src_quad, Size.getCPtr(dst_size), dst_size);
  }

  public static ProjectiveTransform Create() {
    long cPtr = jnisecommonJNI.ProjectiveTransform_Create__SWIG_0();
    return (cPtr == 0) ? null : new ProjectiveTransform(cPtr, true);
  }

  public static ProjectiveTransform Create(Quadrangle src_quad, Quadrangle dst_quad) {
    long cPtr = jnisecommonJNI.ProjectiveTransform_Create__SWIG_1(Quadrangle.getCPtr(src_quad), src_quad, Quadrangle.getCPtr(dst_quad), dst_quad);
    return (cPtr == 0) ? null : new ProjectiveTransform(cPtr, true);
  }

  public static ProjectiveTransform Create(Quadrangle src_quad, Size dst_size) {
    long cPtr = jnisecommonJNI.ProjectiveTransform_Create__SWIG_2(Quadrangle.getCPtr(src_quad), src_quad, Size.getCPtr(dst_size), dst_size);
    return (cPtr == 0) ? null : new ProjectiveTransform(cPtr, true);
  }

  public ProjectiveTransform Clone() {
    long cPtr = jnisecommonJNI.ProjectiveTransform_Clone(swigCPtr, this);
    return (cPtr == 0) ? null : new ProjectiveTransform(cPtr, true);
  }

  public Point TransformPoint(Point p) {
    return new Point(jnisecommonJNI.ProjectiveTransform_TransformPoint(swigCPtr, this, Point.getCPtr(p), p), true);
  }

  public Quadrangle TransformQuad(Quadrangle q) {
    return new Quadrangle(jnisecommonJNI.ProjectiveTransform_TransformQuad(swigCPtr, this, Quadrangle.getCPtr(q), q), true);
  }

  public Polygon TransformPolygon(Polygon poly) {
    return new Polygon(jnisecommonJNI.ProjectiveTransform_TransformPolygon(swigCPtr, this, Polygon.getCPtr(poly), poly), true);
  }

  public boolean IsInvertable() {
    return jnisecommonJNI.ProjectiveTransform_IsInvertable(swigCPtr, this);
  }

  public void Invert() {
    jnisecommonJNI.ProjectiveTransform_Invert(swigCPtr, this);
  }

  public ProjectiveTransform CloneInverted() {
    long cPtr = jnisecommonJNI.ProjectiveTransform_CloneInverted(swigCPtr, this);
    return (cPtr == 0) ? null : new ProjectiveTransform(cPtr, true);
  }

  public void Serialize(Serializer serializer) {
    jnisecommonJNI.ProjectiveTransform_Serialize(swigCPtr, this, Serializer.getCPtr(serializer), serializer);
  }

}
