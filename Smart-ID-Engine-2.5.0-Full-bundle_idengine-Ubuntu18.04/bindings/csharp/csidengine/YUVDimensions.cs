//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (https://www.swig.org).
// Version 4.1.1
//
// Do not make changes to this file unless you know what you are doing - modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace se.common {

public class YUVDimensions : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  public YUVDimensions(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  public static global::System.Runtime.InteropServices.HandleRef getCPtr(YUVDimensions obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  public static global::System.Runtime.InteropServices.HandleRef swigRelease(YUVDimensions obj) {
    if (obj != null) {
      if (!obj.swigCMemOwn)
        throw new global::System.ApplicationException("Cannot release ownership as memory is not owned");
      global::System.Runtime.InteropServices.HandleRef ptr = obj.swigCPtr;
      obj.swigCMemOwn = false;
      obj.Dispose();
      return ptr;
    } else {
      return new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
    }
  }

  ~YUVDimensions() {
    Dispose(false);
  }

  public void Dispose() {
    Dispose(true);
    global::System.GC.SuppressFinalize(this);
  }

  protected virtual void Dispose(bool disposing) {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          cssecommonPINVOKE.delete_YUVDimensions(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
    }
  }

  public YUVDimensions() : this(cssecommonPINVOKE.new_YUVDimensions__SWIG_0(), true) {
    if (cssecommonPINVOKE.SWIGPendingException.Pending) throw cssecommonPINVOKE.SWIGPendingException.Retrieve();
  }

  public YUVDimensions(int y_pixel_stride, int y_row_stride, int u_pixel_stride, int u_row_stride, int v_pixel_stride, int v_row_stride, int width, int height, YUVType type) : this(cssecommonPINVOKE.new_YUVDimensions__SWIG_1(y_pixel_stride, y_row_stride, u_pixel_stride, u_row_stride, v_pixel_stride, v_row_stride, width, height, (int)type), true) {
    if (cssecommonPINVOKE.SWIGPendingException.Pending) throw cssecommonPINVOKE.SWIGPendingException.Retrieve();
  }

  public int y_plane_pixel_stride {
    set {
      cssecommonPINVOKE.YUVDimensions_y_plane_pixel_stride_set(swigCPtr, value);
      if (cssecommonPINVOKE.SWIGPendingException.Pending) throw cssecommonPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      int ret = cssecommonPINVOKE.YUVDimensions_y_plane_pixel_stride_get(swigCPtr);
      if (cssecommonPINVOKE.SWIGPendingException.Pending) throw cssecommonPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public int y_plane_row_stride {
    set {
      cssecommonPINVOKE.YUVDimensions_y_plane_row_stride_set(swigCPtr, value);
      if (cssecommonPINVOKE.SWIGPendingException.Pending) throw cssecommonPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      int ret = cssecommonPINVOKE.YUVDimensions_y_plane_row_stride_get(swigCPtr);
      if (cssecommonPINVOKE.SWIGPendingException.Pending) throw cssecommonPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public int u_plane_pixel_stride {
    set {
      cssecommonPINVOKE.YUVDimensions_u_plane_pixel_stride_set(swigCPtr, value);
      if (cssecommonPINVOKE.SWIGPendingException.Pending) throw cssecommonPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      int ret = cssecommonPINVOKE.YUVDimensions_u_plane_pixel_stride_get(swigCPtr);
      if (cssecommonPINVOKE.SWIGPendingException.Pending) throw cssecommonPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public int u_plane_row_stride {
    set {
      cssecommonPINVOKE.YUVDimensions_u_plane_row_stride_set(swigCPtr, value);
      if (cssecommonPINVOKE.SWIGPendingException.Pending) throw cssecommonPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      int ret = cssecommonPINVOKE.YUVDimensions_u_plane_row_stride_get(swigCPtr);
      if (cssecommonPINVOKE.SWIGPendingException.Pending) throw cssecommonPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public int v_plane_pixel_stride {
    set {
      cssecommonPINVOKE.YUVDimensions_v_plane_pixel_stride_set(swigCPtr, value);
      if (cssecommonPINVOKE.SWIGPendingException.Pending) throw cssecommonPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      int ret = cssecommonPINVOKE.YUVDimensions_v_plane_pixel_stride_get(swigCPtr);
      if (cssecommonPINVOKE.SWIGPendingException.Pending) throw cssecommonPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public int v_plane_row_stride {
    set {
      cssecommonPINVOKE.YUVDimensions_v_plane_row_stride_set(swigCPtr, value);
      if (cssecommonPINVOKE.SWIGPendingException.Pending) throw cssecommonPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      int ret = cssecommonPINVOKE.YUVDimensions_v_plane_row_stride_get(swigCPtr);
      if (cssecommonPINVOKE.SWIGPendingException.Pending) throw cssecommonPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public int width {
    set {
      cssecommonPINVOKE.YUVDimensions_width_set(swigCPtr, value);
      if (cssecommonPINVOKE.SWIGPendingException.Pending) throw cssecommonPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      int ret = cssecommonPINVOKE.YUVDimensions_width_get(swigCPtr);
      if (cssecommonPINVOKE.SWIGPendingException.Pending) throw cssecommonPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public int height {
    set {
      cssecommonPINVOKE.YUVDimensions_height_set(swigCPtr, value);
      if (cssecommonPINVOKE.SWIGPendingException.Pending) throw cssecommonPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      int ret = cssecommonPINVOKE.YUVDimensions_height_get(swigCPtr);
      if (cssecommonPINVOKE.SWIGPendingException.Pending) throw cssecommonPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public YUVType type {
    set {
      cssecommonPINVOKE.YUVDimensions_type_set(swigCPtr, (int)value);
      if (cssecommonPINVOKE.SWIGPendingException.Pending) throw cssecommonPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      YUVType ret = (YUVType)cssecommonPINVOKE.YUVDimensions_type_get(swigCPtr);
      if (cssecommonPINVOKE.SWIGPendingException.Pending) throw cssecommonPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

}

}
