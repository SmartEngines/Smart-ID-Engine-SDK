/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (https://www.swig.org).
 * Version 4.1.1
 *
 * Do not make changes to this file unless you know what you are doing - modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.smartengines.id;

import com.smartengines.common.*;

public class IdVideoAuthenticationCallbacks {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  public IdVideoAuthenticationCallbacks(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  public static long getCPtr(IdVideoAuthenticationCallbacks obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  public static long swigRelease(IdVideoAuthenticationCallbacks obj) {
    long ptr = 0;
    if (obj != null) {
      if (!obj.swigCMemOwn)
        throw new RuntimeException("Cannot release ownership as memory is not owned");
      ptr = obj.swigCPtr;
      obj.swigCMemOwn = false;
      obj.delete();
    }
    return ptr;
  }

  @SuppressWarnings("deprecation")
  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        jniidengineJNI.delete_IdVideoAuthenticationCallbacks(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  protected void swigDirectorDisconnect() {
    swigCMemOwn = false;
    delete();
  }

  public void swigReleaseOwnership() {
    swigCMemOwn = false;
    jniidengineJNI.IdVideoAuthenticationCallbacks_change_ownership(this, swigCPtr, false);
  }

  public void swigTakeOwnership() {
    swigCMemOwn = true;
    jniidengineJNI.IdVideoAuthenticationCallbacks_change_ownership(this, swigCPtr, true);
  }

  public void InstructionReceived(int index, IdVideoAuthenticationInstruction instruction) {
    jniidengineJNI.IdVideoAuthenticationCallbacks_InstructionReceived(swigCPtr, this, index, IdVideoAuthenticationInstruction.getCPtr(instruction), instruction);
  }

  public void AnomalyRegistered(int index, IdVideoAuthenticationAnomaly anomaly) {
    jniidengineJNI.IdVideoAuthenticationCallbacks_AnomalyRegistered(swigCPtr, this, index, IdVideoAuthenticationAnomaly.getCPtr(anomaly), anomaly);
  }

  public void DocumentResultUpdated(IdResult document_result) {
    jniidengineJNI.IdVideoAuthenticationCallbacks_DocumentResultUpdated(swigCPtr, this, IdResult.getCPtr(document_result), document_result);
  }

  public void FaceMatchingResultUpdated(IdFaceSimilarityResult face_matching_result) {
    jniidengineJNI.IdVideoAuthenticationCallbacks_FaceMatchingResultUpdated(swigCPtr, this, IdFaceSimilarityResult.getCPtr(face_matching_result), face_matching_result);
  }

  public void FaceLivenessResultUpdated(IdFaceLivenessResult face_liveness_result) {
    jniidengineJNI.IdVideoAuthenticationCallbacks_FaceLivenessResultUpdated(swigCPtr, this, IdFaceLivenessResult.getCPtr(face_liveness_result), face_liveness_result);
  }

  public void AuthenticationStatusUpdated(IdCheckStatus status) {
    jniidengineJNI.IdVideoAuthenticationCallbacks_AuthenticationStatusUpdated(swigCPtr, this, status.swigValue());
  }

  public void GlobalTimeoutReached() {
    jniidengineJNI.IdVideoAuthenticationCallbacks_GlobalTimeoutReached(swigCPtr, this);
  }

  public void InstructionTimeoutReached() {
    jniidengineJNI.IdVideoAuthenticationCallbacks_InstructionTimeoutReached(swigCPtr, this);
  }

  public void SessionEnded() {
    jniidengineJNI.IdVideoAuthenticationCallbacks_SessionEnded(swigCPtr, this);
  }

  public void MessageReceived(String message) {
    jniidengineJNI.IdVideoAuthenticationCallbacks_MessageReceived(swigCPtr, this, message);
  }

  public IdVideoAuthenticationCallbacks() {
    this(jniidengineJNI.new_IdVideoAuthenticationCallbacks(), true);
    jniidengineJNI.IdVideoAuthenticationCallbacks_director_connect(this, swigCPtr, true, true);
  }

}
